apiVersion: v1
data:
  tetragon-policy-container-escape.yaml: |
    ---
    apiVersion: cilium.io/v1alpha1
    kind: TracingPolicy
    metadata:
      name: "networking" # TracingPolicy identified from the Tetragon Getting Started Lab
    spec:
      kprobes:
      - call: "tcp_connect"
        syscall: false
        args:
        - index: 0
          type: "sock"
      - call: "tcp_close"
        syscall: false
        args:
        - index: 0
          type: "sock"

    # Create a Service Account to be used in specific actions later on
    ---
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: tetragon-sa
      namespace: default

    # Provide dedidcated permissions for the Service Account to exec into a DaemonSet, grab logs and create/update a ConfigMap
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      name: tetragon-cluster-role
    rules:
    - apiGroups:
      - ""
      resources:
      - pods
      verbs:
      - get
      - list
    - apiGroups:
      - ""
      resources:
      - pods/exec
      verbs:
      - get
      - create
    - apiGroups:
      - ""
      resources:
      - configmaps
      verbs:
      - create
      - get
      - list
      - patch
    - apiGroups:
      - apps
      resources:
      - daemonsets
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - batch
      resources:
      - cronjobs
      verbs:
      - create
      - get
      - list
      - watch

    # Crete the required ClusterRoleBinding
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      name: tetragon-cluster-role-binding
    subjects:
    - kind: ServiceAccount
      name: tetragon-sa
      namespace: default
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: tetragon-cluster-role

    # Create a CronJob to be executed every 2 minutes
    # Get the logs based on the TracingPolicy defined above
    # Collect the logs to a file and then create a ConfigMap from this file
    # The ConfigMap will be queries by Sveltos later on
    ---
    apiVersion: batch/v1
    kind: CronJob
    metadata:
      name: tetragon-log-fetcher
    spec:
      schedule: "*/2 * * * *"
      jobTemplate:
        spec:
          template:
            spec:
              serviceAccountName: tetragon-sa
              restartPolicy: OnFailure
              containers:
              - name: tetragon-log-fetcher
                image: bitnami/kubectl:latest
                command:
                - sh
                - "-c"
                args:
                - |
                  timeout 5s kubectl exec -n kube-system daemonset/tetragon -c tetragon -- tetra getevents -o compact > /tmp/tetragon-logs.txt
                  kubectl create configmap tetragon-logs --from-file=/tmp/tetragon-logs.txt -o yaml --dry-run=client | kubectl apply -f -

kind: ConfigMap
metadata:
  name: tetragon-policy-socket-log
  namespace: default
